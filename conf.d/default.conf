proxy_redirect off;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Host $server_name;
proxy_set_header X-Forwarded-Proto https;

server {
    listen 80;
    server_name localhost;

    # A resolver is required to use variables in hostnames,
    # which we are doing when we transform the path into
    # a hostname, e.g. http://localhost/users -> http://users-api.
    resolver 127.0.0.11 ipv6=off;

    #access_log  /var/log/nginx/host.access.log  main;

    # location / {
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    # }

    ############################################################################
    # Middleware Services
    ############################################################################
    # Use "host.docker.internal" instead of the service name when you want
    # to use a machine running on your host machine, e.g. from an IDE. Otherwise,
    # reference the container. Until this file gets some sort of templating,
    # leave both versions and comment out the one you aren't using.

    # graphql-api fronts the other middleware services.
    # location /graphql {
    #     proxy_pass http://graphql-api:8080;
    # }
    location /graphql {
        proxy_pass http://graphql-api:8080/graphql;
    }

    # some middleware services serve graphql AND rest
    location ~ ^/rest/([a-z]*)/(.*)$ {
        proxy_pass http://$1-api/$1/$2;
    }
    
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    #location ~ /\.ht {
    #    deny  all;
    #}
}
